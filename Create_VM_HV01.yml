- name: Create Virtual Machine
  hosts: hv01

  tasks:
    - name: Create Virtual Machine
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        $VHDX={{ VM_VHDX_Size }}
        $RAM={{ VM_RAM }}
        $CPU="{{ VM_CPU }}"
        $NWAdapter="{{ VM_Switch }}"
        $vLAN="{{ VM_vLANid }}"
        $Path="D:\Virtual Hard Disk\{{ VM_Name }}\System.vhdx"
        $ISOPath="{{ VM_ISO }}"
        
        # Creating VM
        New-VM -Name $Name -Path 'D:\Configuration Files\Virtual Machines' -MemoryStartupBytes $RAM -NewVHDPath $Path -NewVHDSizeBytes $VHDX -Generation 2
        
        # Adding DVD drive and connecting ISO
        Add-VMDvdDrive -VMName $Name -Path $ISOPath
        
        # Setting CPU Count
        Set-VMProcessor $Name -Count $CPU
        
        # Configuring Network Adapter and VLAN
        $vmAdapter = Get-VM $Name | Get-VMNetworkAdapter
        $vmAdapter | Connect-VMNetworkAdapter -SwitchName $NWAdapter
        $vmAdapter | Set-VMNetworkAdapterVlan -VlanId $vLAN -Access

    - name: Set boot order
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        Set-VMFirmware $Name -BootOrder $(Get-VMDvdDrive -VMName $Name), $(Get-VMHardDiskDrive -VMName $Name), $(Get-VMNetworkAdapter -VMName $Name)

    - name: Start created VM
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        Start-VM -Name $Name

    - name: Wait until the VM responds to ping 5 times
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        $vmipv4adress = Get-VM -$Name | Get-VMNetworkAdapter | Select-Object -ExpandProperty IPAddresses
        $PingCount = 0
        while ($PingCount -lt 5) {
            if ($vmipv4adress.Count -gt 0) {
              # Extract the first IP address from the list
              $ipAddress = $vmipv4adress[0]

              # Print the IP address (for verification)
              Write-Host "IP Address: $ipAddress"

              # Ping the IP address
              Test-Connection -ComputerName $ipAddress -Count 4
          } else {
              Write-Host "No IP addresses found for the VM."
          }
            Start-Sleep -Seconds 5
        }
      register: ping_result

    - name: Execute PowerShell script after VM is responding
      ansible.windows.win_shell: |
        Write-Host 'Executing PowerShell script after successful ping...'
        & "C:\temp\Send_telegram_Message_After_VM_is_ready.ps1"
        Write-Host 'PowerShell script executed.'
      when: ping_result is success

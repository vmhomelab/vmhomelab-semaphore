- name: Create Virtual Machine
  hosts: hv02

  tasks:
    - name: Create Virtual Machine
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        $VHDX={{ VM_VHDX_Size }}
        $RAM={{ VM_RAM }}
        $CPU="{{ VM_CPU }}"
        $NWAdapter="{{ VM_Switch }}"
        $vLAN="{{ VM_vLANid }}"
        $Path="D:\Virtual Hard Disk\{{ VM_Name }}\System.vhdx"
        $ISOPath="{{ VM_ISO }}"
        
        # Creating VM
        New-VM -Name $Name -Path 'D:\Configuration Files\Virtual Machines' -MemoryStartupBytes $RAM -NewVHDPath $Path -NewVHDSizeBytes $VHDX -Generation 2
        
        # Adding DVD drive and connecting ISO
        Add-VMDvdDrive -VMName $Name -Path $ISOPath
        
        # Setting CPU Count
        Set-VMProcessor $Name -Count $CPU
        
        # Configuring Network Adapter and VLAN
        $vmAdapter = Get-VM $Name | Get-VMNetworkAdapter
        $vmAdapter | Connect-VMNetworkAdapter -SwitchName $NWAdapter
        $vmAdapter | Set-VMNetworkAdapterVlan -VlanId $vLAN -Access

    - name: Set boot order
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        Set-VMFirmware $Name -BootOrder $(Get-VMDvdDrive -VMName $Name), $(Get-VMHardDiskDrive -VMName $Name), $(Get-VMNetworkAdapter -VMName $Name)

    - name: Start created VM
      ansible.windows.win_shell: |
        $Name="{{ VM_Name }}"
        Start-VM -Name $Name

    - name: Wait until the VM responds to ping 5 times
      ansible.windows.win_shell: |
        # Get the most recently created VM and extract the Name property
        $Name = Get-VM | Sort-Object -Property CreationTime -Descending | Select-Object -First 1 | Select-Object -ExpandProperty Name

        $vmipv4address = @()

        # Loop until a valid IPv4 address is found
        while ($vmipv4address.Count -eq 0) {
            # Retrieve the IP addresses associated with the VM
            $vmipv4address = (Get-VM -Name $Name | Get-VMNetworkAdapter).IPAddresses | Where-Object { $_ -match '^(\d{1,3}\.){3}\d{1,3}$' }
            
            if ($vmipv4address.Count -eq 0) {
                Write-Host "No valid IPv4 addresses found. Retrying in 5 seconds..."
                Start-Sleep -Seconds 5
            } else {
                Write-Host "Valid IPv4 address found: $($vmipv4address[0])"
            }
        }

        $PingCount = 0

        # Extract the first valid IPv4 address
        $ipAddress = $vmipv4address

        # Start the ping test
        while ($PingCount -lt 5) {
            # Print the IP address (for verification)
            Write-Host "Pinging IP Address: $ipAddress"

            # Ping the IP address
            $pingResult = Test-Connection -ComputerName $ipAddress -Count 1 -Quiet
            if ($pingResult) {
                $PingCount++
                Write-Host "$ipAddress responded to ping ($PingCount/5)"
            } else {
                $PingCount = 0
                Write-Host "$ipAddress did not respond, resetting count"
            }
            Start-Sleep -Seconds 5
        }
      register: ping_result

    - name: Execute PowerShell script after VM is responding
      ansible.windows.win_shell: |
        Write-Host 'Executing PowerShell script after successful ping...'
        & "C:\temp\Send_telegram_Message_After_VM_is_ready.ps1"
        Write-Host 'PowerShell script executed.'
      when: ping_result is success
